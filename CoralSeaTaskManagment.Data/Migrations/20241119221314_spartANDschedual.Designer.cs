// <auto-generated />
using System;
using CoralSeaTaskManagment.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoralSeaTaskManagment.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241119221314_spartANDschedual")]
    partial class spartANDschedual
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Assign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HotelId");

                    b.ToTable("Assigns");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Assignation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("TechName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignId");

                    b.HasIndex("HotelId");

                    b.HasIndex("OrderId");

                    b.ToTable("Assignations");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Ecategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Ecategories");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Eclass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Eclasses");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Efamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Efamilies");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Estatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Estatuses");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Gitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("GlocationId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GlocationId");

                    b.HasIndex("HotelId");

                    b.ToTable("Gitems");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Glocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Glocations");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Gorder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignFlag")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("GdepartmentFId")
                        .HasColumnType("int");

                    b.Property<int>("GitemId")
                        .HasColumnType("int");

                    b.Property<int>("GlocationId")
                        .HasColumnType("int");

                    b.Property<int>("GroomsId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("OstatusId")
                        .HasColumnType("int");

                    b.Property<int>("OtypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GdepartmentFId");

                    b.HasIndex("GitemId");

                    b.HasIndex("GlocationId");

                    b.HasIndex("GroomsId");

                    b.HasIndex("HotelId");

                    b.HasIndex("OtypeId");

                    b.ToTable("Gorders");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Grooms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Grooms");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EcategoryId")
                        .HasColumnType("int");

                    b.Property<int>("EclassId")
                        .HasColumnType("int");

                    b.Property<int>("EfamilyId")
                        .HasColumnType("int");

                    b.Property<int>("EstatusId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarrantyFlag")
                        .HasColumnType("int");

                    b.Property<DateTime>("WarrantyStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarrantyYear")
                        .HasColumnType("int");

                    b.Property<int>("statusFlag")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EcategoryId");

                    b.HasIndex("EclassId");

                    b.HasIndex("EfamilyId");

                    b.HasIndex("HotelId");

                    b.HasIndex("LocationId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HotelId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignFlag")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentFId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("OstatusId")
                        .HasColumnType("int");

                    b.Property<int>("OtypeId")
                        .HasColumnType("int");

                    b.Property<int>("PeriorityId")
                        .HasColumnType("int");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PickupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentFId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HotelId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LocationId");

                    b.HasIndex("OtypeId");

                    b.HasIndex("PeriorityId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Otype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Fronthousflag")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Otypes");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Outgoing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Outgoings");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Periority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Periorities");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Scheduale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("OrderId");

                    b.ToTable("Scheduales");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Spart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Q")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("ItemId");

                    b.ToTable("Sparts");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Assign", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Assignation", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Assign", "Assigns")
                        .WithMany()
                        .HasForeignKey("AssignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assigns");

                    b.Navigation("Hotels");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Department", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Ecategory", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Eclass", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Efamily", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Estatus", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Gitem", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Glocation", "Glocations")
                        .WithMany()
                        .HasForeignKey("GlocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Glocations");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Glocation", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Gorder", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "GdepartmentFrom")
                        .WithMany()
                        .HasForeignKey("GdepartmentFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Gitem", "Gitems")
                        .WithMany()
                        .HasForeignKey("GitemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Glocation", "Glocations")
                        .WithMany()
                        .HasForeignKey("GlocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Grooms", "Grooms")
                        .WithMany()
                        .HasForeignKey("GroomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Otype", "Otypes")
                        .WithMany()
                        .HasForeignKey("OtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("GdepartmentFrom");

                    b.Navigation("Gitems");

                    b.Navigation("Glocations");

                    b.Navigation("Grooms");

                    b.Navigation("Hotels");

                    b.Navigation("Otypes");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Grooms", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Item", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Ecategory", "Ecategories")
                        .WithMany()
                        .HasForeignKey("EcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Eclass", "Eclasses")
                        .WithMany()
                        .HasForeignKey("EclassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Efamily", "Efamilies")
                        .WithMany()
                        .HasForeignKey("EfamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Location", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Ecategories");

                    b.Navigation("Eclasses");

                    b.Navigation("Efamilies");

                    b.Navigation("Hotels");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Location", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Order", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "DepartmentFrom")
                        .WithMany()
                        .HasForeignKey("DepartmentFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Item", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Location", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Otype", "Otypes")
                        .WithMany()
                        .HasForeignKey("OtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Periority", "Periorities")
                        .WithMany()
                        .HasForeignKey("PeriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentFrom");

                    b.Navigation("Departments");

                    b.Navigation("Hotels");

                    b.Navigation("Items");

                    b.Navigation("Locations");

                    b.Navigation("Otypes");

                    b.Navigation("Periorities");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Otype", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Outgoing", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Item", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");

                    b.Navigation("Items");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Scheduale", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CoralSeaTaskManagment.Model.Models.Domain.Spart", b =>
                {
                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Hotel", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoralSeaTaskManagment.Model.Models.Domain.Item", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
